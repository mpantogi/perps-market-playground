"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.isIpfsGateway = exports.DEFAULT_REGISTRY_ADDRESS = exports.DEFAULT_REGISTRY_CONFIG = exports.BUILD_VERSION = exports.getCannonRepoRegistryUrl = exports.CANNON_CHAIN_ID = exports.preparePublishPackage = exports.PackageReference = exports.publishPackage = exports.FallbackRegistry = exports.InMemoryRegistry = exports.OnChainRegistry = exports.CannonRegistry = exports.prepareMulticall = exports.traceActions = exports.findContract = exports.renderTrace = exports.decodeTxError = exports.InMemoryLoader = exports.IPFSLoader = exports.Events = exports.CannonStorage = exports.ChainBuilderRuntime = exports.ChainDefinition = exports.registerAction = exports.mergeTemplateAccesses = exports.computeTemplateAccesses = exports.getOutputs = exports.getArtifacts = exports.build = exports.createInitialContext = void 0;
var builder_1 = require("./builder");
Object.defineProperty(exports, "createInitialContext", { enumerable: true, get: function () { return builder_1.createInitialContext; } });
Object.defineProperty(exports, "build", { enumerable: true, get: function () { return builder_1.build; } });
Object.defineProperty(exports, "getArtifacts", { enumerable: true, get: function () { return builder_1.getArtifacts; } });
Object.defineProperty(exports, "getOutputs", { enumerable: true, get: function () { return builder_1.getOutputs; } });
var access_recorder_1 = require("./access-recorder");
Object.defineProperty(exports, "computeTemplateAccesses", { enumerable: true, get: function () { return access_recorder_1.computeTemplateAccesses; } });
Object.defineProperty(exports, "mergeTemplateAccesses", { enumerable: true, get: function () { return access_recorder_1.mergeTemplateAccesses; } });
var actions_1 = require("./actions");
Object.defineProperty(exports, "registerAction", { enumerable: true, get: function () { return actions_1.registerAction; } });
var definition_1 = require("./definition");
Object.defineProperty(exports, "ChainDefinition", { enumerable: true, get: function () { return definition_1.ChainDefinition; } });
var runtime_1 = require("./runtime");
Object.defineProperty(exports, "ChainBuilderRuntime", { enumerable: true, get: function () { return runtime_1.ChainBuilderRuntime; } });
Object.defineProperty(exports, "CannonStorage", { enumerable: true, get: function () { return runtime_1.CannonStorage; } });
Object.defineProperty(exports, "Events", { enumerable: true, get: function () { return runtime_1.Events; } });
var loader_1 = require("./loader");
Object.defineProperty(exports, "IPFSLoader", { enumerable: true, get: function () { return loader_1.IPFSLoader; } });
Object.defineProperty(exports, "InMemoryLoader", { enumerable: true, get: function () { return loader_1.InMemoryLoader; } });
var trace_1 = require("./trace");
Object.defineProperty(exports, "decodeTxError", { enumerable: true, get: function () { return trace_1.decodeTxError; } });
Object.defineProperty(exports, "renderTrace", { enumerable: true, get: function () { return trace_1.renderTrace; } });
Object.defineProperty(exports, "findContract", { enumerable: true, get: function () { return trace_1.findContract; } });
var error_1 = require("./error");
Object.defineProperty(exports, "traceActions", { enumerable: true, get: function () { return error_1.traceActions; } });
var multicall_1 = require("./multicall");
Object.defineProperty(exports, "prepareMulticall", { enumerable: true, get: function () { return multicall_1.prepareMulticall; } });
// prevent dumb bugs
BigInt.prototype.toJSON = function () {
    return this.toString();
};
var registry_1 = require("./registry");
Object.defineProperty(exports, "CannonRegistry", { enumerable: true, get: function () { return registry_1.CannonRegistry; } });
Object.defineProperty(exports, "OnChainRegistry", { enumerable: true, get: function () { return registry_1.OnChainRegistry; } });
Object.defineProperty(exports, "InMemoryRegistry", { enumerable: true, get: function () { return registry_1.InMemoryRegistry; } });
Object.defineProperty(exports, "FallbackRegistry", { enumerable: true, get: function () { return registry_1.FallbackRegistry; } });
var package_1 = require("./package");
Object.defineProperty(exports, "publishPackage", { enumerable: true, get: function () { return package_1.publishPackage; } });
Object.defineProperty(exports, "PackageReference", { enumerable: true, get: function () { return package_1.PackageReference; } });
Object.defineProperty(exports, "preparePublishPackage", { enumerable: true, get: function () { return package_1.preparePublishPackage; } });
var constants_1 = require("./constants");
Object.defineProperty(exports, "CANNON_CHAIN_ID", { enumerable: true, get: function () { return constants_1.CANNON_CHAIN_ID; } });
Object.defineProperty(exports, "getCannonRepoRegistryUrl", { enumerable: true, get: function () { return constants_1.getCannonRepoRegistryUrl; } });
Object.defineProperty(exports, "BUILD_VERSION", { enumerable: true, get: function () { return constants_1.BUILD_VERSION; } });
Object.defineProperty(exports, "DEFAULT_REGISTRY_CONFIG", { enumerable: true, get: function () { return constants_1.DEFAULT_REGISTRY_CONFIG; } });
Object.defineProperty(exports, "DEFAULT_REGISTRY_ADDRESS", { enumerable: true, get: function () { return constants_1.DEFAULT_REGISTRY_ADDRESS; } });
var ipfs_1 = require("./ipfs");
Object.defineProperty(exports, "isIpfsGateway", { enumerable: true, get: function () { return ipfs_1.isIpfsGateway; } });
__exportStar(require("./access-recorder"), exports);
__exportStar(require("./definition"), exports);
__exportStar(require("./helpers"), exports);
__exportStar(require("./util"), exports);
__exportStar(require("./types"), exports);
//# sourceMappingURL=index.js.map