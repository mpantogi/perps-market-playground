import { z } from 'zod';
import { ChainBuilderRuntime } from '../runtime';
import { varSchema } from '../schemas';
import { ChainArtifacts, ChainBuilderContext, ChainBuilderContextWithHelpers, PackageState } from '../types';
/**
 *  Available properties for var operation
 *  @public
 *  @group Var
 */
export type Config = z.infer<typeof varSchema>;
export interface Outputs {
    [key: string]: string;
}
declare const varSpec: {
    label: string;
    validate: z.ZodObject<{
        defaultValue: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        depends: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    }, "strip", z.ZodString, z.objectOutputType<{
        defaultValue: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        depends: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    }, z.ZodString, "strip">, z.objectInputType<{
        defaultValue: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        depends: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    }, z.ZodString, "strip">>;
    getState(runtime: ChainBuilderRuntime, ctx: ChainBuilderContextWithHelpers, config: Config): Promise<Pick<z.objectOutputType<{
        defaultValue: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        depends: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    }, z.ZodString, "strip">, string | number>[]>;
    configInject(ctx: ChainBuilderContextWithHelpers, config: Config): z.objectOutputType<{
        defaultValue: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        depends: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    }, z.ZodString, "strip">;
    getInputs(config: Config, possibleFields: string[]): import("../access-recorder").AccessComputationResult;
    getOutputs(config: Config, packageState: PackageState): string[];
    exec(runtime: ChainBuilderRuntime, ctx: ChainBuilderContext, config: Config, packageState: PackageState): Promise<ChainArtifacts>;
};
export default varSpec;
//# sourceMappingURL=var.d.ts.map