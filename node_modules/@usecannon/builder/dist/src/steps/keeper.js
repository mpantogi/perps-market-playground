"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.keeperSchema = void 0;
const lodash_1 = __importDefault(require("lodash"));
const zod_1 = require("zod");
/**
 *  Available properties for keeper operation (Not yet implemented)
 *  @internal
 *  @group Keeper
 */
exports.keeperSchema = zod_1.z
    .object({
    exec: zod_1.z.string(),
})
    .merge(zod_1.z
    .object({
    args: zod_1.z.array(zod_1.z.string()),
    env: zod_1.z.array(zod_1.z.string()),
})
    .deepPartial());
// ensure the specified contract is already deployed
// if not deployed, deploy the specified hardhat contract with specfied options, export address, abi, etc.
// if already deployed, reexport deployment options for usage downstream and exit with no changes
exports.default = {
    label: 'keeper',
    validate: exports.keeperSchema,
    async getState(_runtime, ctx, config) {
        return [this.configInject(ctx, config)];
    },
    configInject(ctx, config) {
        config = lodash_1.default.cloneDeep(config);
        config.exec = lodash_1.default.template(config.exec)(ctx);
        if (config.args) {
            config.args = lodash_1.default.map(config.args, (v) => {
                return lodash_1.default.template(v)(ctx);
            });
        }
        if (config.env) {
            config.env = lodash_1.default.map(config.env, (v) => {
                return lodash_1.default.template(v)(ctx);
            });
        }
        return config;
    },
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    async exec(_runtime, _ctx, _config) {
        return {};
    },
};
//# sourceMappingURL=keeper.js.map