import * as viem from 'viem';
import { CannonSigner } from '@usecannon/builder';
import { CliSettings } from '../settings';
export declare enum ProviderOrigin {
    Registry = "registry",
    Write = "write"
}
export declare const isURL: (url: string) => boolean;
export declare const getChainIdFromProviderUrl: (providerUrl: string) => Promise<number>;
export declare function resolveWriteProvider(settings: CliSettings, chainId: number): Promise<{
    provider: viem.PublicClient & viem.WalletClient;
    signers: CannonSigner[];
}>;
export declare function resolveRegistryProviders(cliSettings: CliSettings): Promise<{
    provider: viem.PublicClient;
    signers: CannonSigner[];
}[]>;
export declare function resolveProviderAndSigners({ chainId, checkProviders, privateKey, origin, }: {
    chainId: number;
    checkProviders?: string[];
    privateKey?: string;
    origin: ProviderOrigin;
}): Promise<{
    provider: viem.PublicClient;
    signers: CannonSigner[];
}>;
//# sourceMappingURL=provider.d.ts.map