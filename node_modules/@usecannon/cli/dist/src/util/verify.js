"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isVerified = void 0;
/**
 * Check if a smart contract is verified on Etherscan.
 * @link https://docs.etherscan.io/api-endpoints/contracts#get-contract-source-code-for-verified-contract-source-codes
 * @param address - The address of the smart contract.
 * @param apiUrl - Etherscan API URL.
 * @param apiKey - Etherscan API Key.
 * @returns True if the contract is verified, false otherwise.
 */
async function isVerified(address, apiUrl, apiKey) {
    const parameters = new URLSearchParams({
        apikey: apiKey,
        module: 'contract',
        action: 'getsourcecode',
        address,
    });
    const url = new URL(apiUrl);
    url.search = parameters.toString();
    try {
        const response = await fetch(url);
        // checking that status is in the range 200-299 inclusive
        if (!response.ok) {
            throw new Error(`Network response failed (${response.status}: ${response.statusText})`);
        }
        const json = (await response.json());
        if (json.message !== 'OK') {
            return false;
        }
        const sourceCode = json.result[0]?.SourceCode;
        return sourceCode !== undefined && sourceCode !== null && sourceCode !== '';
    }
    catch (e) {
        return false;
    }
}
exports.isVerified = isVerified;
//# sourceMappingURL=verify.js.map