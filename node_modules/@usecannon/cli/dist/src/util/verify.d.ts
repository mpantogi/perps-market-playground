interface EtherscanContract {
    SourceCode: string;
    ABI: string;
    ContractName: string;
    CompilerVersion: string;
    OptimizationUsed: string;
    Runs: string;
    ConstructorArguments: string;
    EVMVersion: string;
    Library: string;
    LicenseType: string;
    Proxy: string;
    Implementation: string;
    SwarmSource: string;
}
interface EtherscanGetSourceCodeNotOkResponse {
    status: '0';
    message: 'NOTOK';
    result: string;
}
interface EtherscanGetSourceCodeOkResponse {
    status: '1';
    message: 'OK';
    result: EtherscanContract[];
}
export type EtherscanGetSourceCodeResponse = EtherscanGetSourceCodeNotOkResponse | EtherscanGetSourceCodeOkResponse;
/**
 * Check if a smart contract is verified on Etherscan.
 * @link https://docs.etherscan.io/api-endpoints/contracts#get-contract-source-code-for-verified-contract-source-codes
 * @param address - The address of the smart contract.
 * @param apiUrl - Etherscan API URL.
 * @param apiKey - Etherscan API Key.
 * @returns True if the contract is verified, false otherwise.
 */
export declare function isVerified(address: string, apiUrl: string, apiKey: string): Promise<boolean>;
export {};
//# sourceMappingURL=verify.d.ts.map