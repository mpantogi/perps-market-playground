declare const commandsConfig: {
    run: {
        description: string;
        usage: string;
        arguments: {
            flags: string;
            description: string;
        }[];
        anvilOptions: ({
            flags: string;
            description: string;
            defaultValue: string;
        } | {
            flags: string;
            description: string;
            defaultValue?: undefined;
        })[];
        options: ({
            flags: string;
            description: string;
        } | {
            flags: string;
            description: string;
            defaultValue: `0x${string}`;
        })[];
    };
    build: {
        description: string;
        arguments: ({
            flags: string;
            description: string;
            defaultValue: string;
        } | {
            flags: string;
            description: string;
            defaultValue?: undefined;
        })[];
        anvilOptions: ({
            flags: string;
            description: string;
            defaultValue: string;
        } | {
            flags: string;
            description: string;
            defaultValue?: undefined;
        })[];
        options: {
            flags: string;
            description: string;
        }[];
    };
    verify: {
        description: string;
        arguments: {
            flags: string;
            description: string;
        }[];
        options: ({
            flags: string;
            description: string;
        } | {
            flags: string;
            description: string;
            defaultValue: string;
        })[];
    };
    alter: {
        description: string;
        arguments: {
            flags: string;
            description: string;
        }[];
        options: {
            flags: string;
            description: string;
        }[];
    };
    fetch: {
        description: string;
        arguments: {
            flags: string;
            description: string;
        }[];
        options: {
            flags: string;
            description: string;
        }[];
    };
    pin: {
        description: string;
        arguments: {
            flags: string;
            description: string;
        }[];
        options: {
            flags: string;
            description: string;
        }[];
    };
    publish: {
        description: string;
        arguments: {
            flags: string;
            description: string;
        }[];
        options: {
            flags: string;
            description: string;
        }[];
    };
    unpublish: {
        description: string;
        arguments: {
            flags: string;
            description: string;
        }[];
        options: {
            flags: string;
            description: string;
        }[];
    };
    register: {
        description: string;
        arguments: {
            flags: string;
            description: string;
        }[];
        options: {
            flags: string;
            description: string;
        }[];
    };
    publishers: {
        description: string;
        arguments: {
            flags: string;
            description: string;
        }[];
        options: {
            flags: string;
            description: string;
        }[];
    };
    inspect: {
        description: string;
        arguments: {
            flags: string;
            description: string;
        }[];
        options: ({
            flags: string;
            description: string;
        } | {
            flags: string;
            description: string;
            defaultValue: string;
        })[];
    };
    prune: {
        description: string;
        options: ({
            flags: string;
            description: string;
        } | {
            flags: string;
            description: string;
            defaultValue: string;
        })[];
    };
    trace: {
        description: string;
        arguments: {
            flags: string;
            description: string;
        }[];
        options: {
            flags: string;
            description: string;
        }[];
    };
    decode: {
        description: string;
        arguments: {
            flags: string;
            description: string;
        }[];
        options: ({
            flags: string;
            description: string;
        } | {
            flags: string;
            description: string;
            defaultValue: string;
        })[];
    };
    test: {
        description: string;
        usage: string;
        arguments: ({
            flags: string;
            description: string;
            defaultValue: string;
        } | {
            flags: string;
            description: string;
            defaultValue?: undefined;
        })[];
        options: ({
            flags: string;
            description: string;
        } | {
            flags: string;
            description: string;
            defaultValue: string;
        })[];
    };
    interact: {
        description: string;
        arguments: {
            flags: string;
            description: string;
        }[];
        options: {
            flags: string;
            description: string;
        }[];
    };
    setup: {
        description: string;
    };
    clean: {
        description: string;
        options: {
            flags: string;
            description: string;
        }[];
    };
    plugin: {
        description: string;
        commands: {
            list: {
                description: string;
            };
            add: {
                description: string;
                arguments: {
                    flags: string;
                    description: string;
                }[];
            };
            remove: {
                description: string;
                arguments: {
                    flags: string;
                    description: string;
                }[];
            };
        };
    };
};
export default commandsConfig;
//# sourceMappingURL=commandsConfig.d.ts.map