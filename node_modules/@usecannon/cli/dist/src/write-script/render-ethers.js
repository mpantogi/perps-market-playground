"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createRenderer = void 0;
const node_os_1 = require("node:os");
const node_stream_1 = require("node:stream");
const header = `/* eslint-disable */

export const transactions = [
`;
const footer = `];

export async function build(signer) {
  console.log(\`Signer: \${await signer.getAddress()}\`);
  console.log();

  const txs = [];

  for (const { title, depth, to, data, value } of transactions) {
    const indent = '  '.repeat(depth);
    console.log(\`\${indent}\${title}\`);
    if (!data) continue; // it is a provision step, it doesn't have a tx
    const tx = await signer.sendTransaction({ to, data, value });
    await tx.wait();
    console.log(\`\${indent}  tx hash: \${tx.hash}\`);
    txs.push(tx);
  }

  return txs;
}
`;
const createRenderer = () => new node_stream_1.Transform({
    objectMode: true,
    construct(cb) {
        this.push(header);
        return cb();
    },
    transform(line, _, cb) {
        const title = `[${line.type}.${line.label}]`;
        // provision and import steps don't execute txs, but we want to log them
        if (!line.result) {
            this.push(`  ${JSON.stringify({ title, depth: line.depth })},${node_os_1.EOL}`);
        }
        for (const { to, input, value } of line.txns) {
            const params = {
                title,
                depth: line.depth,
                data: input,
            };
            // contract deployments doesn't have a "to" or "value"
            if (to)
                params.to = to;
            if (value)
                params.value = value;
            this.push(`  ${JSON.stringify(params)},${node_os_1.EOL}`);
        }
        return cb();
    },
    flush(cb) {
        this.push(footer);
        return cb();
    },
});
exports.createRenderer = createRenderer;
//# sourceMappingURL=render-ethers.js.map