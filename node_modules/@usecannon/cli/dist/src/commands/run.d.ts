import { CannonRegistry, ContractArtifact } from '@usecannon/builder';
import * as viem from 'viem';
import { PackageSpecification } from '../types';
import { CannonRpcNode } from '../rpc';
export interface RunOptions {
    node: CannonRpcNode;
    resolver?: CannonRegistry;
    logs?: boolean;
    pkgInfo: any;
    presetArg?: string;
    impersonate: string;
    mnemonic?: string;
    privateKey?: viem.Hash;
    upgradeFrom?: string;
    getArtifact?: (name: string) => Promise<ContractArtifact>;
    registryPriority: 'local' | 'onchain' | 'offline';
    fundAddresses?: string[];
    helpInformation?: string;
    build?: boolean;
    nonInteractive?: boolean;
}
export declare function run(packages: PackageSpecification[], options: RunOptions): Promise<void>;
//# sourceMappingURL=run.d.ts.map