import * as viem from 'viem';
import { CannonSigner, ChainArtifacts, Contract } from '@usecannon/builder';
import { PackageSpecification } from '../types';
type InteractTaskArgs = {
    packages: PackageSpecification[];
    packagesArtifacts?: ChainArtifacts[];
    contracts: {
        [name: string]: Contract;
    }[];
    provider: viem.PublicClient;
    signer?: CannonSigner;
    blockTag?: number;
};
export declare function interact(ctx: InteractTaskArgs): Promise<null>;
/**
 * Converts an object to a prettified JSON string with a specified indentation and offset.
 *
 * @param {any} obj - The object to be converted into a JSON string.
 * @param {number} offsetSpaces - The number of spaces to offset the entire JSON string. Default is 4.
 * @param {number} indentSpaces - The number of spaces used for indentation in the JSON string. Default is 2.
 * @returns {string} - The prettified and offset JSON string.
 */
export declare function stringifyWithOffset(obj: any, offsetSpaces?: number, indentSpaces?: number): string;
/**
 * Renders the arguments for a given ABI parameter and its associated value.
 * This function handles different data structures (tuples, arrays, uint, int, etc).
 *
 * @param {viem.AbiParameter} input - The ABI parameter describing the type and structure of the value.
 * @param {any} value - The value associated with the ABI parameter.
 * @param {string} offset - A string used for initial indentation, facilitating readable output formatting.
 * @returns {string} - A string representation of the argument, formatted for readability.
 */
export declare function renderArgs(input: viem.AbiParameter, value: any, offset?: string): string;
export {};
//# sourceMappingURL=interact.d.ts.map