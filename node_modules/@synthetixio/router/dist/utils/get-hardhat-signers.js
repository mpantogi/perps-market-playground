"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getHardhatSigners = void 0;
async function getHardhatSigners(hre, provider) {
    const accounts = hre.network.config.accounts;
    let signers;
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    const Wallet = hre.ethers.Wallet;
    if (Array.isArray(accounts)) {
        signers = accounts.map((account) => new Wallet(typeof account === 'string' ? account : account.privateKey));
    }
    else if (accounts === 'remote') {
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        throw new Error('Cannot use remote accounts');
    }
    else {
        signers = Array(accounts.count)
            .fill(0)
            .map((_, i) => Wallet.fromMnemonic(accounts.mnemonic, accounts.path + `/${i + accounts.initialIndex}`));
    }
    return signers.map((signer) => signer.connect(provider));
}
exports.getHardhatSigners = getHardhatSigners;
//# sourceMappingURL=get-hardhat-signers.js.map